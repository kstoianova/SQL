# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

-- What are top 10 popular artists?
SELECT artist_name, track_name, popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity desc
LIMIT 10;

-- What's the popularity of the highest and lowest dancibility songs?
SELECT MAX(danceability), MIN (danceability)
FROM BIT_DB.Spotifydata;

SELECT danceability, popularity
FROM BIT_DB.Spotifydata
WHERE danceability = 0.903
OR danceability = 0.38;

-- What's the highest energy song?
SELECT MAX(energy), track_name
FROM BIT_DB.Spotifydata;

-- What's the avg popularity, danceability, and energy by artist and track?
SELECT artist_name, avg(popularity), avg(danceability), avg(energy)
FROM BIT_DB.spotifydata
GROUP BY artist_name;

-- -- Calculate the average popularity for the artists in the Spotify data table. Then, for every artist with an average popularity of 90 or above, show their name, their average popularity, and label them as a “Top Star”.
WITH avgpopularity AS (
    SELECT artist_name, AVG(popularity) as average_popularity
    FROM Spotifydata
    GROUP BY artist_name
    )
SELECT artist_name, average_popularity, 'Top Star' as tag
FROM avgpopularity
WHERE average_popularity >= 90
